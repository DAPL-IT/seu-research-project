<?php

//** DO NOT WORK HERE THIS is a TEST Controller for ML MODEL */

namespace App\Http\Controllers\ML;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Phpml\Classification\KNearestNeighbors;
use Phpml\Regression\LeastSquares;
use App\Models\RentClassification;
use Phpml\ModelManager;

class MlModelController extends Controller
{
    // private $demoDataArr =
    // [
    //     [1, 1, 8, 4000, 'low'],
    //     [1, 1, 10, 4500, 'low'],
    //     [2, 1, 10, 4800, 'low'],
    //     [2, 1, 97, 2700, 'low'],
    //     [1, 1, 205, 4200, 'low'],
    //     [2, 1, 183, 3900, 'low'],
    //     [2, 1, 76, 4700, 'low'],
    //     [1, 1, 42, 4300, 'low'],
    //     [2, 1, 184, 3900, 'low'],
    //     [1, 1, 72, 2400, 'low'],
    //     [1, 1, 218, 4600, 'low'],
    //     [1, 1, 100, 2300, 'low'],
    //     [2, 1, 166, 4400, 'low'],
    //     [1, 1, 11, 3000, 'low'],
    //     [2, 1, 162, 3300, 'low'],
    //     [2, 1, 103, 3800, 'low'],
    //     [1, 1, 221, 5000, 'low'],
    //     [2, 1, 253, 4700, 'low'],
    //     [1, 1, 128, 2900, 'low'],
    //     [1, 1, 52, 3900, 'low'],
    //     [2, 1, 180, 4800, 'low'],
    //     [2, 1, 226, 3800, 'low'],
    //     [1, 1, 107, 4200, 'low'],
    //     [2, 1, 205, 2400, 'low'],
    //     [1, 1, 158, 3500, 'low'],
    //     [2, 1, 85, 2300, 'low'],
    //     [2, 1, 120, 3200, 'low'],
    //     [2, 1, 45, 2600, 'low'],
    //     [2, 1, 216, 4500, 'low'],
    //     [2, 1, 51, 3300, 'low'],
    //     [1, 1, 26, 4100, 'low'],
    //     [2, 1, 140, 4000, 'low'],
    //     [1, 1, 179, 4200, 'low'],
    //     [1, 1, 237, 2400, 'low'],
    //     [2, 1, 221, 4900, 'low'],
    //     [1, 1, 91, 3700, 'low'],
    //     [1, 1, 19, 4200, 'low'],
    //     [2, 1, 72, 3800, 'low'],
    //     [2, 1, 150, 4900, 'low'],
    //     [1, 1, 188, 2400, 'low'],
    //     [2, 1, 203, 4800, 'low'],
    //     [1, 1, 11, 3000, 'low'],
    //     [2, 1, 199, 3500, 'low'],
    //     [2, 1, 118, 4500, 'low'],
    //     [2, 1, 58, 3200, 'low'],
    //     [1, 1, 149, 3600, 'low'],
    //     [2, 1, 44, 4600, 'low'],
    //     [2, 1, 33, 2100, 'low'],
    //     [1, 1, 94, 4200, 'low'],
    //     [1, 1, 83, 4300, 'low'],
    //     [2, 2, 8, 7000, 'low-mid'],
    //     [2, 1, 10, 6000, 'low-mid'],
    //     [2, 1, 10, 5800, 'low-mid'],
    //     [2, 1, 97, 5300, 'low-mid'],
    //     [2, 1, 205, 7200, 'low-mid'],
    //     [3, 2, 183, 7000, 'low-mid'],
    //     [2, 2, 76, 7000, 'low-mid'],
    //     [2, 1, 42, 6000, 'low-mid'],
    //     [2, 2, 184, 7000, 'low-mid'],
    //     [2, 1, 72, 6000, 'low-mid'],
    //     [2, 1, 218, 7000, 'low-mid'],
    //     [2, 2, 100, 7000, 'low-mid'],
    //     [2, 2, 166, 7000, 'low-mid'],
    //     [2, 1, 11, 6000, 'low-mid'],
    //     [2, 1, 162, 7000, 'low-mid'],
    //     [2, 1, 103, 7000, 'low-mid'],
    //     [2, 2, 221, 8000, 'low-mid'],
    //     [2, 2, 253, 8000, 'low-mid'],
    //     [2, 1, 128, 7000, 'low-mid'],
    //     [2, 1, 52, 6000, 'low-mid'],
    //     [2, 2, 180, 7000, 'low-mid'],
    //     [2, 1, 226, 7000, 'low-mid'],
    //     [2, 1, 107, 6000, 'low-mid'],
    //     [2, 2, 205, 7000, 'low-mid'],
    //     [2, 1, 158, 7000, 'low-mid'],
    //     [2, 2, 85, 7000, 'low-mid'],
    //     [2, 2, 120, 7000, 'low-mid'],
    //     [2, 1, 45, 6000, 'low-mid'],
    //     [2, 2, 216, 7000, 'low-mid'],
    //     [2, 2, 51, 7000, 'low-mid'],
    //     [2, 1, 26, 6000, 'low-mid'],
    //     [2, 2, 140, 7000, 'low-mid'],
    //     [2, 1, 179, 7000, 'low-mid'],
    //     [2, 1, 237, 7000, 'low-mid'],
    //     [2, 2, 221, 8000, 'low-mid'],
    //     [2, 1, 91, 6000, 'low-mid'],
    //     [2, 1, 19, 6000, 'low-mid'],
    //     [2, 2, 72, 7000, 'low-mid'],
    //     [2, 2, 150, 7000, 'low-mid'],
    //     [2, 1, 188, 7000, 'low-mid'],
    //     [2, 2, 203, 7000, 'low-mid'],
    //     [2, 1, 11, 6000, 'low-mid'],
    //     [2, 2, 199, 7000, 'low-mid'],
    //     [2, 2, 118, 7000, 'low-mid'],
    //     [2, 1, 58, 6000, 'low-mid'],
    //     [2, 1, 149, 7000, 'low-mid'],
    //     [2, 2, 44, 7000, 'low-mid'],
    //     [2, 2, 33, 7000, 'low-mid'],
    //     [2, 1, 94, 6000, 'low-mid'],
    //     [2, 1, 83, 6000, 'low-mid'],
    //     [2, 1, 33, 8023, 'low-high'],
    //     [3, 1, 57, 9001, 'low-high'],
    //     [3, 1, 185, 9500, 'low-high'],
    //     [3, 2, 132, 10000, 'low-high'],
    //     [3, 2, 118, 8500, 'low-high'],
    //     [2, 1, 22, 8024, 'low-high'],
    //     [2, 2, 221, 12000, 'low-high'],
    //     [3, 1, 102, 8025, 'low-high'],
    //     [3, 1, 49, 9500, 'low-high'],
    //     [2, 1, 74, 8026, 'low-high'],
    //     [2, 1, 84, 8027, 'low-high'],
    //     [2, 1, 94, 8028, 'low-high'],
    //     [3, 1, 103, 8029, 'low-high'],
    //     [3, 1, 111, 8030, 'low-high'],
    //     [2, 1, 129, 8031, 'low-high'],
    //     [2, 1, 136, 8032, 'low-high'],
    //     [3, 2, 143, 9002, 'low-high'],
    //     [2, 1, 146, 8033, 'low-high'],
    //     [3, 1, 150, 8034, 'low-high'],
    //     [3, 1, 152, 8035, 'low-high'],
    //     [4, 2, 155, 11000, 'low-high'],
    //     [3, 1, 156, 8036, 'low-high'],
    //     [3, 1, 157, 8037, 'low-high'],
    //     [4, 2, 160, 11500, 'low-high'],
    //     [3, 1, 161, 8040, 'low-high'],
    //     [3, 1, 162, 8041, 'low-high'],
    //     [3, 2, 166, 9003, 'low-high'],
    //     [3, 1, 170, 8042, 'low-high'],
    //     [4, 2, 171, 12000, 'low-high'],
    //     [2, 1, 174, 8044, 'low-high'],
    //     [3, 1, 180, 8045, 'low-high'],
    //     [3, 1, 182, 8046, 'low-high'],
    //     [3, 1, 189, 8047, 'low-high'],
    //     [3, 1, 192, 8048, 'low-high'],
    //     [3, 1, 199, 8049, 'low-high'],
    //     [3, 1, 202, 8050, 'low-high'],
    //     [3, 2, 207, 9004, 'low-high'],
    //     [3, 1, 214, 8051, 'low-high'],
    //     [3, 1, 218, 8052, 'low-high'],
    //     [3, 1, 221, 8053, 'low-high'],
    //     [3, 1, 225, 8054, 'low-high'],
    //     [3, 1, 229, 8055, 'low-high'],
    //     [3, 1, 231, 8056, 'low-high'],
    //     [3, 2, 236, 9005, 'low-high'],
    //     [3, 1, 241, 8057, 'low-high'],
    //     [3, 1, 245, 8058, 'low-high'],
    //     [3, 1, 247, 8059, 'low-high'],
    //     [3, 1, 252, 8060, 'low-high'],
    //     [3, 1, 254, 8061, 'low-high'],
    //     [3, 1, 255, 8062, 'low-high'],
    //     [3, 2, 257, 9006, 'low-high'],
    //     [4, 2, 124, 13750, 'mid-low'],
    //     [4, 2, 193, 14450, 'mid-low'],
    //     [3, 2, 54, 13900, 'mid-low'],
    //     [4, 2, 121, 13500, 'mid-low'],
    //     [4, 2, 167, 14500, 'mid-low'],
    //     [3, 2, 218, 14100, 'mid-low'],
    //     [3, 2, 37, 14700, 'mid-low'],
    //     [3, 2, 108, 12700, 'mid-low'],
    //     [3, 2, 241, 14800, 'mid-low'],
    //     [3, 2, 182, 12350, 'mid-low'],
    //     [4, 2, 89, 13200, 'mid-low'],
    //     [3, 2, 226, 12900, 'mid-low'],
    //     [3, 2, 176, 14350, 'mid-low'],
    //     [3, 2, 212, 13750, 'mid-low'],
    //     [3, 2, 114, 14150, 'mid-low'],
    //     [4, 2, 191, 13850, 'mid-low'],
    //     [3, 2, 78, 14550, 'mid-low'],
    //     [3, 2, 57, 12200, 'mid-low'],
    //     [4, 3, 64, 12750, 'mid-low'],
    //     [4, 2, 179, 13050, 'mid-low'],
    //     [4, 2, 251, 14750, 'mid-low'],
    //     [3, 2, 25, 12550, 'mid-low'],
    //     [3, 2, 207, 14600, 'mid-low'],
    //     [4, 2, 158, 13650, 'mid-low'],
    //     [3, 2, 215, 13300, 'mid-low'],
    //     [3, 2, 143, 13900, 'mid-low'],
    //     [3, 2, 68, 13100, 'mid-low'],
    //     [3, 2, 116, 12450, 'mid-low'],
    //     [3, 2, 81, 12800, 'mid-low'],
    //     [3, 2, 96, 12150, 'mid-low'],
    //     [4, 2, 134, 12650, 'mid-low'],
    //     [3, 2, 15, 11950, 'mid-low'],
    //     [3, 2, 156, 13350, 'mid-low'],
    //     [3, 2, 129, 12250, 'mid-low'],
    //     [4, 2, 47, 13600, 'mid-low'],
    //     [3, 2, 198, 11800, 'mid-low'],
    //     [3, 2, 26, 13250, 'mid-low'],
    //     [3, 2, 169, 13450, 'mid-low'],
    //     [4, 2, 77, 12850, 'mid-low'],
    //     [4, 3, 101, 12500, 'mid-low'],
    //     [3, 2, 71, 13700, 'mid-low'],
    //     [3, 2, 161, 13150, 'mid-low'],
    //     [3, 2, 109, 12300, 'mid-low'],
    //     [3, 2, 219, 12600, 'mid-low'],
    //     [4, 2, 31, 13800, 'mid-low'],
    //     [4, 2, 43, 13550, 'mid-low'],
    //     [3, 2, 231, 12050, 'mid-low'],
    //     [3, 2, 148, 14300, 'mid-low'],
    //     [3, 2, 182, 14250, 'mid-low'],
    //     [4, 2, 12, 14000, 'mid-low'],
    //     [3, 2, 88, 13650, 'mid-low'],
    //     [4, 2, 128, 16700, 'mid'],
    //     [4, 2, 65, 15900, 'mid'],
    //     [4, 2, 225, 18600, 'mid'],
    //     [4, 2, 94, 15700, 'mid'],
    //     [4, 2, 42, 15600, 'mid'],
    //     [4, 2, 187, 16800, 'mid'],
    //     [4, 2, 153, 16350, 'mid'],
    //     [4, 2, 213, 17900, 'mid'],
    //     [4, 2, 110, 16200, 'mid'],
    //     [4, 2, 31, 15800, 'mid'],
    //     [4, 2, 245, 18500, 'mid'],
    //     [4, 2, 82, 15900, 'mid'],
    //     [4, 2, 16, 15500, 'mid'],
    //     [4, 2, 156, 16800, 'mid'],
    //     [4, 2, 199, 17250, 'mid'],
    //     [4, 2, 118, 16450, 'mid'],
    //     [4, 2, 72, 15750, 'mid'],
    //     [4, 2, 139, 17000, 'mid'],
    //     [4, 2, 53, 15650, 'mid'],
    //     [5, 3, 67, 19800, 'mid'],
    //     [4, 2, 188, 17250, 'mid'],
    //     [4, 2, 108, 16200, 'mid'],
    //     [4, 2, 33, 15750, 'mid'],
    //     [4, 2, 219, 18300, 'mid'],
    //     [4, 2, 145, 16650, 'mid'],
    //     [4, 2, 78, 15900, 'mid'],
    //     [4, 2, 238, 17900, 'mid'],
    //     [4, 2, 126, 16650, 'mid'],
    //     [4, 2, 14, 15450, 'mid'],
    //     [4, 2, 165, 16700, 'mid'],
    //     [4, 2, 199, 17400, 'mid'],
    //     [4, 2, 113, 16300, 'mid'],
    //     [4, 2, 63, 15600, 'mid'],
    //     [4, 2, 175, 17000, 'mid'],
    //     [4, 2, 229, 18100, 'mid'],
    //     [4, 2, 101, 16150, 'mid'],
    //     [4, 2, 50, 15500, 'mid'],
    //     [4, 2, 134, 16750, 'mid'],
    //     [4, 2, 206, 17600, 'mid'],
    //     [4, 2, 157, 16800, 'mid'],
    //     [4, 2, 88, 16050, 'mid'],
    //     [4, 2, 27, 15700, 'mid'],
    //     [4, 2, 199, 17350, 'mid'],
    //     [4, 2, 118, 16450, 'mid'],
    //     [4, 2, 63, 15600, 'mid'],
    //     [4, 2, 181, 17150, 'mid'],
    //     [4, 2, 218, 18000, 'mid'],
    //     [4, 2, 135, 16750, 'mid'],
    //     [4, 2, 66, 15850, 'mid'],
    //     [4, 2, 7, 15350, 'mid'],
    //     [4, 3, 128, 20250, 'mid-high'],
    //     [4, 3, 65, 20450, 'mid-high'],
    //     [4, 3, 225, 21600, 'mid-high'],
    //     [4, 3, 94, 21000, 'mid-high'],
    //     [4, 3, 42, 20300, 'mid-high'],
    //     [4, 3, 187, 21300, 'mid-high'],
    //     [4, 3, 153, 20850, 'mid-high'],
    //     [4, 3, 213, 21500, 'mid-high'],
    //     [4, 3, 110, 20800, 'mid-high'],
    //     [4, 3, 31, 20250, 'mid-high'],
    //     [4, 3, 245, 21600, 'mid-high'],
    //     [4, 3, 82, 20550, 'mid-high'],
    //     [4, 3, 16, 20150, 'mid-high'],
    //     [4, 3, 156, 21000, 'mid-high'],
    //     [4, 3, 199, 21450, 'mid-high'],
    //     [4, 3, 118, 20850, 'mid-high'],
    //     [4, 3, 72, 20400, 'mid-high'],
    //     [4, 3, 139, 21250, 'mid-high'],
    //     [4, 3, 53, 20350, 'mid-high'],
    //     [5, 3, 67, 22100, 'mid-high'],
    //     [4, 3, 188, 21550, 'mid-high'],
    //     [4, 3, 108, 20750, 'mid-high'],
    //     [4, 3, 33, 20200, 'mid-high'],
    //     [4, 3, 219, 21650, 'mid-high'],
    //     [4, 3, 145, 21050, 'mid-high'],
    //     [4, 3, 78, 20550, 'mid-high'],
    //     [4, 3, 238, 21450, 'mid-high'],
    //     [4, 3, 126, 20950, 'mid-high'],
    //     [4, 3, 14, 20100, 'mid-high'],
    //     [4, 3, 165, 20650, 'mid-high'],
    //     [4, 3, 199, 21450, 'mid-high'],
    //     [4, 3, 113, 20800, 'mid-high'],
    //     [4, 3, 63, 20350, 'mid-high'],
    //     [4, 3, 175, 21200, 'mid-high'],
    //     [4, 3, 229, 21650, 'mid-high'],
    //     [4, 3, 101, 20600, 'mid-high'],
    //     [4, 3, 50, 20250, 'mid-high'],
    //     [4, 3, 134, 20900, 'mid-high'],
    //     [4, 3, 206, 21550, 'mid-high'],
    //     [4, 3, 93, 20850, 'mid-high'],
    //     [4, 3, 39, 20250, 'mid-high'],
    //     [4, 3, 168, 21100, 'mid-high'],
    //     [4, 3, 240, 21700, 'mid-high'],
    //     [4, 3, 120, 20950, 'mid-high'],
    //     [4, 3, 7, 20050, 'mid-high'],
    //     [4, 3, 179, 21250, 'mid-high'],
    //     [4, 3, 224, 21700, 'mid-high'],
    //     [4, 3, 102, 20650, 'mid-high'],
    //     [4, 3, 60, 20300, 'mid-high'],
    //     [4, 3, 130, 20900, 'mid-high'],
    //     [4, 3, 212, 21550, 'mid-high'],
    //     [5, 3, 128, 32500, 'high-low'],
    //     [6, 3, 65, 33500, 'high-low'],
    //     [5, 3, 225, 31000, 'high-low'],
    //     [5, 3, 94, 30500, 'high-low'],
    //     [5, 3, 42, 29500, 'high-low'],
    //     [5, 3, 187, 32000, 'high-low'],
    //     [5, 3, 153, 31000, 'high-low'],
    //     [5, 3, 213, 33000, 'high-low'],
    //     [5, 3, 110, 31000, 'high-low'],
    //     [5, 3, 31, 30500, 'high-low'],
    //     [6, 3, 245, 34500, 'high-low'],
    //     [5, 3, 82, 31000, 'high-low'],
    //     [5, 3, 16, 30500, 'high-low'],
    //     [5, 3, 156, 31500, 'high-low'],
    //     [5, 3, 199, 33000, 'high-low'],
    //     [5, 3, 118, 32500, 'high-low'],
    //     [5, 3, 72, 31500, 'high-low'],
    //     [5, 3, 139, 32500, 'high-low'],
    //     [5, 3, 53, 30500, 'high-low'],
    //     [5, 4, 67, 33500, 'high-low'],
    //     [6, 3, 188, 35000, 'high-low'],
    //     [5, 3, 108, 32500, 'high-low'],
    //     [5, 3, 33, 30500, 'high-low'],
    //     [5, 3, 219, 33000, 'high-low'],
    //     [5, 3, 145, 32500, 'high-low'],
    //     [5, 3, 78, 31500, 'high-low'],
    //     [5, 3, 238, 33000, 'high-low'],
    //     [5, 3, 126, 32500, 'high-low'],
    //     [5, 3, 14, 30500, 'high-low'],
    //     [5, 3, 165, 32500, 'high-low'],
    //     [5, 3, 199, 33000, 'high-low'],
    //     [5, 3, 113, 32500, 'high-low'],
    //     [5, 3, 63, 31500, 'high-low'],
    //     [5, 3, 175, 32500, 'high-low'],
    //     [5, 3, 229, 33000, 'high-low'],
    //     [5, 3, 101, 31500, 'high-low'],
    //     [5, 3, 50, 30500, 'high-low'],
    //     [5, 3, 134, 32500, 'high-low'],
    //     [5, 3, 202, 33000, 'high-low'],
    //     [6, 3, 87, 33500, 'high-low'],
    //     [5, 3, 26, 30500, 'high-low'],
    //     [5, 3, 180, 32500, 'high-low'],
    //     [5, 3, 148, 32000, 'high-low'],
    //     [5, 3, 64, 31000, 'high-low'],
    //     [5, 3, 232, 33500, 'high-low'],
    //     [5, 3, 121, 32000, 'high-low'],
    //     [5, 3, 18, 30500, 'high-low'],
    //     [5, 3, 161, 32500, 'high-low'],
    //     [5, 3, 204, 33000, 'high-low'],
    //     [5, 3, 125, 32000, 'high-low'],
    //     [5, 3, 76, 31500, 'high-low'],
    //     [5, 3, 141, 32000, 'high-low'],
    //     [7, 3, 115, 47500, 'high-mid'],
    //     [8, 3, 42, 44000, 'high-mid'],
    //     [8, 3, 177, 39500, 'high-mid'],
    //     [7, 3, 96, 42500, 'high-mid'],
    //     [7, 3, 31, 42000, 'high-mid'],
    //     [9, 4, 206, 50000, 'high-mid'],
    //     [7, 3, 85, 43000, 'high-mid'],
    //     [7, 3, 8, 42000, 'high-mid'],
    //     [7, 3, 151, 44000, 'high-mid'],
    //     [7, 3, 191, 46000, 'high-mid'],
    //     [9, 3, 117, 47500, 'high-mid'],
    //     [7, 3, 74, 43000, 'high-mid'],
    //     [7, 3, 160, 44500, 'high-mid'],
    //     [8, 3, 47, 43000, 'high-mid'],
    //     [7, 3, 23, 42000, 'high-mid'],
    //     [7, 3, 188, 45500, 'high-mid'],
    //     [7, 3, 99, 42500, 'high-mid'],
    //     [7, 3, 43, 42000, 'high-mid'],
    //     [8, 3, 145, 45000, 'high-mid'],
    //     [7, 3, 183, 46500, 'high-mid'],
    //     [9, 3, 110, 47500, 'high-mid'],
    //     [7, 3, 63, 43000, 'high-mid'],
    //     [7, 3, 171, 45500, 'high-mid'],
    //     [8, 3, 31, 42500, 'high-mid'],
    //     [7, 3, 11, 42000, 'high-mid'],
    //     [7, 3, 200, 46000, 'high-mid'],
    //     [7, 3, 105, 42500, 'high-mid'],
    //     [7, 3, 49, 42000, 'high-mid'],
    //     [8, 3, 164, 44500, 'high-mid'],
    //     [7, 3, 178, 45500, 'high-mid'],
    //     [9, 3, 124, 47500, 'high-mid'],
    //     [7, 3, 67, 43000, 'high-mid'],
    //     [7, 3, 156, 44500, 'high-mid'],
    //     [8, 3, 34, 42500, 'high-mid'],
    //     [7, 3, 27, 42000, 'high-mid'],
    //     [7, 3, 212, 47000, 'high-mid'],
    //     [7, 3, 92, 42500, 'high-mid'],
    //     [7, 3, 5, 42000, 'high-mid'],
    //     [8, 3, 152, 44500, 'high-mid'],
    //     [7, 3, 200, 46000, 'high-mid'],
    //     [9, 3, 115, 47500, 'high-mid'],
    //     [7, 3, 75, 43000, 'high-mid'],
    //     [7, 3, 159, 44500, 'high-mid'],
    //     [8, 3, 48, 43000, 'high-mid'],
    //     [7, 3, 22, 42000, 'high-mid'],
    //     [7, 3, 187, 45500, 'high-mid'],
    //     [7, 3, 98, 42500, 'high-mid'],
    //     [7, 3, 40, 42000, 'high-mid'],
    //     [8, 3, 145, 45000, 'high-mid'],
    //     [7, 3, 180, 46500, 'high-mid'],
    //     [9, 3, 117, 47500, 'high-mid'],
    //     [7, 3, 66, 43000, 'high-mid'],
    //     [7, 3, 160, 44500, 'high-mid'],
    //     [9, 4, 156, 80000, 'high'],
    //     [12, 5, 73, 95000, 'high'],
    //     [11, 4, 204, 90000, 'high'],
    //     [9, 4, 99, 81000, 'high'],
    //     [9, 4, 39, 80500, 'high'],
    //     [10, 4, 89, 85000, 'high'],
    //     [13, 5, 187, 98000, 'high'],
    //     [9, 4, 45, 81000, 'high'],
    //     [10, 4, 166, 88000, 'high'],
    //     [10, 4, 212, 89000, 'high'],
    //     [14, 6, 218, 100000, 'high'],
    //     [9, 4, 79, 81500, 'high'],
    //     [10, 4, 153, 87500, 'high'],
    //     [12, 4, 52, 92000, 'high'],
    //     [9, 4, 17, 80500, 'high'],
    //     [9, 4, 200, 89500, 'high'],
    //     [9, 4, 107, 81500, 'high'],
    //     [9, 4, 52, 80500, 'high'],
    //     [10, 4, 183, 87000, 'high'],
    //     [9, 4, 232, 91000, 'high'],
    //     [14, 6, 102, 100000, 'high'],
    //     [9, 4, 56, 81000, 'high'],
    //     [9, 4, 141, 85000, 'high'],
    //     [12, 4, 36, 92000, 'high'],
    //     [9, 4, 12, 80500, 'high'],
    //     [9, 4, 247, 92000, 'high'],
    //     [9, 4, 126, 81500, 'high'],
    //     [9, 4, 57, 80500, 'high'],
    //     [10, 4, 169, 88000, 'high'],
    //     [9, 4, 207, 90000, 'high'],
    //     [14, 6, 114, 100000, 'high'],
    //     [9, 4, 60, 81000, 'high'],
    //     [9, 4, 139, 85000, 'high'],
    //     [12, 4, 27, 91500, 'high'],
    //     [9, 4, 2, 80500, 'high'],
    //     [9, 4, 246, 92000, 'high'],
    //     [9, 4, 125, 81500, 'high'],
    //     [9, 4, 61, 80500, 'high'],
    //     [10, 4, 170, 88000, 'high'],
    //     [9, 4, 206, 90000, 'high'],
    //     [14, 6, 137, 100000, 'high'],
    //     [9, 4, 68, 81000, 'high'],
    //     [9, 4, 130, 81500, 'high'],
    //     [12, 4, 9, 91000, 'high'],
    //     [9, 4, 4, 80500, 'high'],
    //     [9, 4, 239, 92000, 'high'],
    //     [9, 4, 124, 81500, 'high'],
    //     [9, 4, 69, 80500, 'high'],
    //     [10, 4, 174, 88000, 'high'],
    //     [9, 4, 205, 90000, 'high'],
    //     [14, 6, 140, 100000, 'high'],
    //     [9, 4, 70, 81000, 'high'],
    //     [9, 4, 129, 81500, 'high'],
    //     [12, 4, 3, 90500, 'high'],
    //     [9, 4, 9, 80500, 'high'],
    //     [9, 4, 236, 92000, 'high'],
    //     [9, 4, 127, 81500, 'high'],
    //     [9, 4, 73, 80500, 'high'],
    //     [10, 4, 178, 88000, 'high'],
    //     [9, 4, 201, 89500, 'high'],
    //     [14, 6, 132, 100000, 'high'],
    //     [9, 4, 76, 81000, 'high'],
    //     [9, 4, 128, 81500, 'high'],
    //     [12, 4, 21, 91500, 'high'],
    //     [9, 4, 11, 80500, 'high'],
    //     [9, 4, 234, 92000, 'high'],
    //     [9, 4, 130, 81500, 'high'],
    //     [9, 4, 77, 80500, 'high'],
    //     [10, 4, 179, 88000, 'high'],
    //     [9, 4, 202, 89500, 'high'],
    //     [14, 6, 162, 100000, 'high'],
    //     [9, 4, 82, 81000, 'high'],
    //     [9, 4, 132, 81500, 'high'],
    //     [12, 4, 32, 92000, 'high'],
    //     [9, 4, 18, 80500, 'high'],
    //     [9, 4, 227, 92000, 'high'],
    //     [9, 4, 131, 81500, 'high'],
    //     [9, 4, 83, 80500, 'high'],
    //     [10, 4, 181, 88000, 'high'],
    //     [9, 4, 203, 89500, 'high'],
    //     [14, 6, 173, 100000, 'high'],
    //     [9, 4, 90, 81000, 'high'],
    //     [9, 4, 135, 81500, 'high'],
    //     [12, 4, 42, 92000, 'high'],
    //     [9, 4, 21, 80500, 'high'],
    //     [9, 4, 225, 92000, 'high'],
    //     [9, 4, 137, 81500, 'high'],
    //     [9, 4, 91, 80500, 'high'],
    //     [10, 4, 186, 88000, 'high'],
    //     [9, 4, 209, 90000, 'high'],
    //     [14, 6, 175, 100000, 'high'],
    //     [9, 4, 97, 81000, 'high'],
    //     [9, 4, 138, 81500, 'high'],
    //     [12, 4, 46, 92000, 'high'],
    //     [9, 4, 23, 80500, 'high'],
    //     [9, 4, 222, 92000, 'high'],
    //     [9, 4, 139, 81500, 'high'],
    //     [9, 4, 98, 80500, 'high'],
    //     [10, 4, 189, 88000, 'high'],
    //     [9, 4, 212, 90000, 'high'],
    //     [14, 6, 190, 100000, 'high'],
    // ];

    private $demoDataArr = [
        [9, 4, 201, 83000, 4500, 'high'],
        [9, 5, 137, 76000, 4800, 'high'],
        [13, 6, 74, 98000, 6700, 'high'],
        [12, 6, 101, 95000, 6200, 'high'],
        [9, 4, 223, 85000, 4100, 'high'],
        [14, 6, 42, 100000, 6900, 'high'],
        [11, 4, 172, 92000, 5700, 'high'],
        [10, 4, 186, 90000, 5200, 'high'],
        [9, 4, 204, 84000, 4300, 'high'],
        [9, 4, 67, 81000, 3800, 'high'],
        [9, 4, 244, 88000, 5000, 'high'],
        [14, 6, 210, 99000, 6600, 'high'],
        [9, 4, 82, 82000, 4000, 'high'],
        [9, 5, 169, 76000, 4900, 'high'],
        [13, 6, 49, 97000, 6400, 'high'],
        [12, 6, 131, 93000, 6100, 'high'],
        [9, 4, 233, 86000, 4200, 'high'],
        [14, 6, 92, 99000, 6700, 'high'],
        [11, 4, 111, 91000, 5600, 'high'],
        [10, 4, 176, 89000, 5100, 'high'],
        [9, 4, 211, 83000, 4400, 'high'],
        [9, 4, 76, 80000, 3700, 'high'],
        [9, 4, 228, 87000, 4900, 'high'],
        [14, 6, 162, 98000, 6500, 'high'],
        [9, 4, 92, 81000, 3900, 'high'],
        [9, 5, 191, 77000, 5000, 'high'],
        [13, 6, 109, 96000, 6300, 'high'],
        [12, 6, 143, 94000, 6000, 'high'],
        [9, 4, 237, 88000, 4500, 'high'],
        [14, 6, 53, 100000, 6800, 'high'],
        [11, 4, 122, 93000, 5500, 'high'],
        [10, 4, 187, 91000, 5100, 'high'],
        [9, 4, 213, 85000, 4300, 'high'],
        [9, 4, 79, 82000, 3900, 'high'],
        [9, 4, 250, 87000, 4800, 'high'],
        [14, 6, 177, 99000, 6600, 'high'],
        [9, 4, 104, 80000, 4000, 'high'],
        [9, 5, 224, 77000, 4900, 'high'],
        [13, 6, 121, 96000, 6200, 'high'],
        [12, 6, 234, 93000, 5900, 'high'],
        [9, 4, 43, 89000, 4400, 'high'],
        [14, 6, 206, 100000, 6800, 'high'],
        [11, 4, 193, 92000, 5600, 'high'],
        [10, 4, 157, 90000, 5200, 'high'],
        [9, 4, 39, 84000, 4300, 'high'],
        [9, 4, 240, 81000, 3800, 'high'],
        [9, 4, 122, 87000, 4700, 'high'],
        [14, 6, 72, 98000, 6500, 'high'],
        [9, 4, 153, 80000, 3900, 'high'],
        [9, 5, 136, 77000, 4800, 'high'],
        [13, 6, 171, 97000, 6400, 'high'],
        [12, 6, 89, 94000, 6100, 'high'],
        [9, 3, 215, 42600, 3850, 'high-mid'],
        [9, 3, 184, 41600, 4230, 'high-mid'],
        [8, 3, 126, 38950, 3150, 'high-mid'],
        [7, 3, 89, 37200, 2910, 'high-mid'],
        [8, 3, 241, 39400, 3160, 'high-mid'],
        [9, 3, 168, 41200, 4060, 'high-mid'],
        [7, 3, 13, 36900, 2860, 'high-mid'],
        [9, 4, 222, 44000, 4290, 'high-mid'],
        [7, 3, 149, 38300, 3030, 'high-mid'],
        [9, 3, 73, 40500, 3700, 'high-mid'],
        [9, 3, 17, 41000, 3920, 'high-mid'],
        [9, 3, 203, 42350, 4000, 'high-mid'],
        [9, 3, 168, 41500, 4100, 'high-mid'],
        [8, 3, 232, 38900, 3310, 'high-mid'],
        [9, 4, 56, 43750, 4180, 'high-mid'],
        [8, 3, 172, 39950, 3410, 'high-mid'],
        [7, 3, 219, 37250, 3020, 'high-mid'],
        [9, 3, 240, 42500, 3960, 'high-mid'],
        [7, 3, 111, 37350, 2950, 'high-mid'],
        [9, 4, 70, 43800, 4250, 'high-mid'],
        [9, 3, 147, 41400, 4080, 'high-mid'],
        [8, 3, 189, 39150, 3350, 'high-mid'],
        [9, 4, 80, 44000, 4170, 'high-mid'],
        [8, 3, 96, 39600, 3310, 'high-mid'],
        [7, 3, 212, 36800, 2910, 'high-mid'],
        [9, 3, 116, 41350, 3970, 'high-mid'],
        [7, 3, 37, 36900, 2850, 'high-mid'],
        [9, 4, 200, 43100, 4080, 'high-mid'],
        [9, 3, 57, 40650, 3760, 'high-mid'],
        [8, 3, 115, 39250, 3300, 'high-mid'],
        [9, 4, 84, 43850, 4200, 'high-mid'],
        [8, 3, 208, 39150, 3400, 'high-mid'],
        [7, 3, 195, 36600, 2940, 'high-mid'],
        [9, 3, 27, 40900, 3940, 'high-mid'],
        [7, 3, 112, 37250, 2870, 'high-mid'],
        [9, 4, 61, 43450, 4170, 'high-mid'],
        [9, 3, 247, 42800, 4020, 'high-mid'],
        [8, 3, 63, 39200, 3370, 'high-mid'],
        [9, 4, 174, 43100, 4150, 'high-mid'],
        [8, 3, 82, 39650, 3290, 'high-mid'],
        [7, 3, 201, 36950, 2960, 'high-mid'],
        [9, 3, 42, 40600, 3880, 'high-mid'],
        [9, 4, 114, 43350, 4150, 'high-mid'],
        [8, 3, 136, 39200, 3360, 'high-mid'],
        [7, 3, 155, 36850, 2890, 'high-mid'],
        [9, 3, 227, 42450, 3980, 'high-mid'],
        [7, 3, 51, 37000, 2920, 'high-mid'],
        [9, 4, 154, 43100, 4140, 'high-mid'],
        [9, 3, 39, 40950, 3930, 'high-mid'],
        [8, 3, 200, 39400, 3390, 'high-mid'],
        [9, 4, 131, 43000, 4120, 'high-mid'],
        [8, 3, 107, 39500, 3280, 'high-mid'],
        [6, 3, 185, 29800, 2450, 'high-low'],
        [5, 3, 126, 26900, 2120, 'high-low'],
        [6, 3, 239, 30300, 2620, 'high-low'],
        [5, 3, 38, 27250, 2080, 'high-low'],
        [6, 3, 157, 29550, 2380, 'high-low'],
        [6, 3, 184, 29700, 2440, 'high-low'],
        [6, 3, 51, 28950, 2290, 'high-low'],
        [6, 4, 96, 31600, 2780, 'high-low'],
        [6, 3, 207, 30600, 2560, 'high-low'],
        [6, 3, 20, 29750, 2430, 'high-low'],
        [6, 3, 89, 29750, 2400, 'high-low'],
        [5, 3, 137, 27400, 2150, 'high-low'],
        [6, 3, 78, 30250, 2540, 'high-low'],
        [6, 3, 233, 30250, 2550, 'high-low'],
        [5, 4, 73, 31350, 2700, 'high-low'],
        [5, 3, 232, 27600, 2160, 'high-low'],
        [6, 3, 144, 29750, 2420, 'high-low'],
        [5, 3, 113, 27450, 2130, 'high-low'],
        [6, 4, 212, 31300, 2680, 'high-low'],
        [6, 3, 127, 29850, 2460, 'high-low'],
        [5, 3, 81, 27250, 2070, 'high-low'],
        [6, 4, 93, 31650, 2790, 'high-low'],
        [6, 3, 181, 30100, 2520, 'high-low'],
        [6, 4, 9, 31850, 2840, 'high-low'],
        [5, 3, 202, 27750, 2180, 'high-low'],
        [6, 3, 101, 29650, 2390, 'high-low'],
        [6, 3, 37, 29550, 2360, 'high-low'],
        [5, 3, 148, 27150, 2110, 'high-low'],
        [6, 4, 77, 31700, 2820, 'high-low'],
        [6, 3, 231, 30450, 2590, 'high-low'],
        [6, 3, 52, 29350, 2300, 'high-low'],
        [5, 3, 162, 27650, 2140, 'high-low'],
        [6, 4, 178, 31450, 2660, 'high-low'],
        [6, 3, 120, 30000, 2490, 'high-low'],
        [5, 3, 9, 27200, 2060, 'high-low'],
        [6, 4, 237, 31350, 2710, 'high-low'],
        [5, 3, 31, 27600, 2170, 'high-low'],
        [6, 3, 216, 30650, 2570, 'high-low'],
        [6, 4, 67, 31800, 2830, 'high-low'],
        [5, 3, 193, 27650, 2150, 'high-low'],
        [6, 3, 92, 30150, 2510, 'high-low'],
        [6, 4, 133, 31450, 2650, 'high-low'],
        [5, 3, 240, 27350, 2100, 'high-low'],
        [6, 3, 173, 29900, 2470, 'high-low'],
        [6, 3, 99, 29650, 2380, 'high-low'],
        [5, 3, 205, 27300, 2090, 'high-low'],
        [6, 4, 174, 31550, 2670, 'high-low'],
        [5, 3, 40, 27400, 2120, 'high-low'],
        [6, 4, 157, 31250, 2640, 'high-low'],
        [5, 3, 189, 27350, 2100, 'high-low'],
        [6, 3, 63, 29700, 2410, 'high-low'],
        [6, 3, 30, 29450, 2340, 'high-low'],
        [5, 3, 120, 27000, 2050, 'high-low'],
        [4, 2, 113, 13711, 612, 'mid-low'],
        [3, 2, 196, 14822, 524, 'mid-low'],
        [4, 2, 25, 13599, 620, 'mid-low'],
        [3, 2, 89, 13244, 511, 'mid-low'],
        [4, 2, 150, 14027, 674, 'mid-low'],
        [4, 2, 193, 14246, 493, 'mid-low'],
        [4, 2, 85, 13730, 468, 'mid-low'],
        [4, 2, 121, 13889, 689, 'mid-low'],
        [4, 2, 207, 13234, 678, 'mid-low'],
        [3, 2, 96, 13125, 549, 'mid-low'],
        [4, 2, 174, 13609, 485, 'mid-low'],
        [4, 2, 223, 13243, 693, 'mid-low'],
        [3, 2, 235, 14721, 692, 'mid-low'],
        [4, 2, 32, 13274, 636, 'mid-low'],
        [4, 2, 87, 13721, 549, 'mid-low'],
        [4, 2, 148, 14130, 613, 'mid-low'],
        [3, 2, 226, 14368, 469, 'mid-low'],
        [3, 2, 153, 13686, 560, 'mid-low'],
        [3, 2, 13, 14397, 615, 'mid-low'],
        [3, 2, 231, 13921, 431, 'mid-low'],
        [4, 2, 190, 14212, 684, 'mid-low'],
        [3, 2, 166, 13352, 644, 'mid-low'],
        [4, 2, 107, 13326, 686, 'mid-low'],
        [3, 2, 121, 13970, 515, 'mid-low'],
        [3, 2, 186, 14485, 442, 'mid-low'],
        [3, 2, 40, 12671, 512, 'mid-low'],
        [4, 2, 75, 12995, 683, 'mid-low'],
        [4, 2, 71, 13629, 613, 'mid-low'],
        [3, 2, 237, 12877, 472, 'mid-low'],
        [4, 2, 64, 12669, 619, 'mid-low'],
        [4, 2, 186, 13552, 459, 'mid-low'],
        [4, 2, 148, 12690, 662, 'mid-low'],
        [3, 2, 251, 14103, 445, 'mid-low'],
        [4, 2, 56, 12698, 659, 'mid-low'],
        [4, 2, 207, 12574, 620, 'mid-low'],
        [4, 2, 30, 12802, 699, 'mid-low'],
        [4, 2, 155, 14569, 468, 'mid-low'],
        [4, 2, 56, 14650, 503, 'mid-low'],
        [4, 2, 225, 13378, 673, 'mid-low'],
        [3, 2, 9, 13506, 620, 'mid-low'],
        [4, 2, 239, 13422, 694, 'mid-low'],
        [4, 2, 165, 12962, 635, 'mid-low'],
        [3, 2, 5, 13499, 466, 'mid-low'],
        [4, 2, 30, 12384, 676, 'mid-low'],
        [4, 2, 230, 13660, 526, 'mid-low'],
        [3, 2, 68, 12871, 423, 'mid-low'],
        [4, 2, 215, 12640, 675, 'mid-low'],
        [3, 2, 244, 13147, 604, 'mid-low'],
        [4, 2, 222, 14724, 656, 'mid-low'],
        [4, 2, 174, 13685, 684, 'mid-low'],
        [3, 2, 112, 14091, 506, 'mid-low'],
        [3, 2, 97, 12352, 527, 'mid-low'],
        [4, 2, 79, 17015, 708, 'mid'],
        [4, 2, 184, 16156, 692, 'mid'],
        [4, 2, 245, 18503, 712, 'mid'],
        [4, 2, 72, 17924, 667, 'mid'],
        [4, 2, 93, 16789, 684, 'mid'],
        [4, 2, 131, 18029, 709, 'mid'],
        [4, 2, 197, 16852, 781, 'mid'],
        [4, 2, 228, 17311, 759, 'mid'],
        [4, 2, 26, 17967, 721, 'mid'],
        [4, 2, 203, 16734, 785, 'mid'],
        [4, 2, 47, 18926, 775, 'mid'],
        [4, 2, 68, 17392, 747, 'mid'],
        [4, 2, 157, 16947, 624, 'mid'],
        [4, 2, 119, 17180, 765, 'mid'],
        [4, 2, 164, 19025, 602, 'mid'],
        [4, 2, 121, 16047, 757, 'mid'],
        [4, 2, 88, 16804, 714, 'mid'],
        [4, 2, 139, 16761, 660, 'mid'],
        [4, 2, 146, 16643, 792, 'mid'],
        [4, 2, 134, 15421, 735, 'mid'],
        [4, 2, 62, 16437, 670, 'mid'],
        [4, 2, 138, 15899, 647, 'mid'],
        [4, 2, 96, 18527, 703, 'mid'],
        [4, 2, 185, 16775, 788, 'mid'],
        [4, 2, 90, 18698, 700, 'mid'],
        [4, 2, 73, 18842, 742, 'mid'],
        [4, 2, 212, 16341, 711, 'mid'],
        [4, 2, 179, 15816, 677, 'mid'],
        [4, 2, 151, 18655, 677, 'mid'],
        [4, 2, 238, 16583, 737, 'mid'],
        [4, 2, 171, 15280, 645, 'mid'],
        [4, 2, 134, 17749, 716, 'mid'],
        [4, 2, 38, 18243, 720, 'mid'],
        [4, 2, 226, 17025, 780, 'mid'],
        [4, 2, 36, 18659, 784, 'mid'],
        [4, 2, 55, 17634, 766, 'mid'],
        [4, 2, 78, 17316, 674, 'mid'],
        [4, 2, 148, 17439, 774, 'mid'],
        [4, 2, 92, 18942, 642, 'mid'],
        [4, 2, 157, 18278, 635, 'mid'],
        [4, 2, 76, 18149, 698, 'mid'],
        [4, 2, 196, 17564, 735, 'mid'],
        [4, 2, 243, 18135, 617, 'mid'],
        [4, 2, 103, 17123, 691, 'mid'],
        [4, 2, 45, 16622, 737, 'mid'],
        [4, 2, 155, 18865, 776, 'mid'],
        [4, 2, 117, 16432, 680, 'mid'],
        [4, 2, 32, 16321, 652, 'mid'],
        [4, 2, 163, 18308, 755, 'mid'],
        [4, 2, 120, 17492, 765, 'mid'],
        [4, 2, 249, 16279, 707, 'mid'],
        [3, 1, 215, 10529, 488, 'low-high'],
        [2, 1, 57, 8134, 467, 'low-high'],
        [3, 1, 92, 10264, 436, 'low-high'],
        [2, 1, 190, 11143, 492, 'low-high'],
        [4, 2, 141, 11621, 455, 'low-high'],
        [3, 1, 126, 9082, 405, 'low-high'],
        [2, 1, 173, 8114, 480, 'low-high'],
        [3, 1, 218, 10773, 475, 'low-high'],
        [4, 2, 238, 11278, 482, 'low-high'],
        [3, 1, 110, 8955, 412, 'low-high'],
        [3, 1, 55, 10151, 481, 'low-high'],
        [2, 1, 207, 8902, 423, 'low-high'],
        [3, 1, 95, 10943, 496, 'low-high'],
        [3, 1, 157, 9923, 428, 'low-high'],
        [4, 2, 51, 11389, 490, 'low-high'],
        [3, 1, 65, 10643, 422, 'low-high'],
        [4, 2, 72, 11753, 499, 'low-high'],
        [3, 1, 114, 8721, 486, 'low-high'],
        [2, 1, 160, 8204, 452, 'low-high'],
        [4, 2, 240, 11921, 464, 'low-high'],
        [4, 2, 64, 11898, 463, 'low-high'],
        [3, 1, 139, 9645, 405, 'low-high'],
        [2, 1, 125, 8321, 409, 'low-high'],
        [3, 1, 132, 10177, 498, 'low-high'],
        [3, 1, 80, 9782, 423, 'low-high'],
        [4, 2, 74, 11582, 457, 'low-high'],
        [4, 2, 197, 11987, 489, 'low-high'],
        [4, 2, 78, 12049, 451, 'low-high'],
        [3, 1, 116, 10345, 411, 'low-high'],
        [2, 1, 107, 8867, 496, 'low-high'],
        [2, 1, 67, 8863, 442, 'low-high'],
        [4, 2, 101, 11796, 475, 'low-high'],
        [3, 1, 35, 10046, 408, 'low-high'],
        [4, 2, 38, 11243, 488, 'low-high'],
        [3, 1, 198, 10827, 461, 'low-high'],
        [2, 1, 188, 9564, 444, 'low-high'],
        [4, 2, 36, 11455, 465, 'low-high'],
        [3, 1, 25, 10122, 446, 'low-high'],
        [4, 2, 19, 11471, 486, 'low-high'],
        [4, 2, 120, 11633, 453, 'low-high'],
        [3, 1, 243, 9131, 422, 'low-high'],
        [4, 2, 176, 11275, 489, 'low-high'],
        [3, 1, 72, 10662, 490, 'low-high'],
        [3, 1, 106, 9344, 460, 'low-high'],
        [4, 2, 230, 12096, 497, 'low-high'],
        [3, 1, 191, 10457, 419, 'low-high'],
        [2, 1, 52, 8229, 466, 'low-high'],
        [4, 2, 2, 11991, 490, 'low-high'],
        [4, 2, 160, 11722, 456, 'low-high'],
        [2, 1, 231, 8391, 429, 'low-high'],
        [4, 2, 153, 11565, 479, 'low-high'],
        [4, 2, 103, 11971, 468, 'low-high'],
        [5, 3, 107, 22503, 1267, 'mid-high'],
        [4, 3, 189, 21246, 1338, 'mid-high'],
        [4, 3, 218, 20579, 1285, 'mid-high'],
        [5, 3, 32, 24855, 1387, 'mid-high'],
        [5, 3, 96, 23934, 1256, 'mid-high'],
        [4, 3, 182, 21014, 1281, 'mid-high'],
        [4, 3, 71, 22245, 1153, 'mid-high'],
        [4, 3, 133, 20757, 1242, 'mid-high'],
        [5, 3, 52, 23496, 1314, 'mid-high'],
        [4, 3, 68, 21288, 1176, 'mid-high'],
        [5, 3, 247, 24510, 1201, 'mid-high'],
        [4, 3, 231, 20310, 1124, 'mid-high'],
        [4, 3, 151, 21579, 1352, 'mid-high'],
        [4, 3, 81, 20167, 1204, 'mid-high'],
        [4, 3, 53, 20459, 1229, 'mid-high'],
        [4, 3, 194, 23040, 1316, 'mid-high'],
        [5, 3, 117, 24301, 1365, 'mid-high'],
        [4, 3, 69, 21493, 1218, 'mid-high'],
        [4, 3, 173, 20902, 1132, 'mid-high'],
        [5, 3, 248, 24842, 1198, 'mid-high'],
        [4, 3, 26, 20631, 1263, 'mid-high'],
        [4, 3, 42, 21416, 1121, 'mid-high'],
        [4, 3, 142, 21672, 1374, 'mid-high'],
        [5, 3, 80, 23026, 1380, 'mid-high'],
        [4, 3, 202, 21948, 1165, 'mid-high'],
        [4, 3, 75, 20851, 1299, 'mid-high'],
        [4, 3, 194, 23874, 1232, 'mid-high'],
        [4, 3, 96, 20340, 1359, 'mid-high'],
        [4, 3, 206, 23008, 1281, 'mid-high'],
        [5, 3, 147, 24176, 1255, 'mid-high'],
        [4, 3, 112, 22793, 1221, 'mid-high'],
        [4, 3, 68, 21218, 1372, 'mid-high'],
        [4, 3, 246, 21732, 1189, 'mid-high'],
        [4, 3, 49, 20912, 1193, 'mid-high'],
        [4, 3, 98, 20532, 1309, 'mid-high'],
        [4, 3, 188, 22461, 1207, 'mid-high'],
        [4, 3, 153, 21061, 1175, 'mid-high'],
        [4, 3, 39, 21793, 1227, 'mid-high'],
        [4, 3, 186, 23155, 1344, 'mid-high'],
        [4, 3, 219, 21643, 1220, 'mid-high'],
        [4, 3, 48, 20221, 1316, 'mid-high'],
        [4, 3, 206, 23149, 1283, 'mid-high'],
        [4, 3, 158, 22231, 1339, 'mid-high'],
        [5, 3, 82, 23896, 1125, 'mid-high'],
        [4, 3, 189, 20398, 1295, 'mid-high'],
        [4, 3, 130, 21685, 1264, 'mid-high'],
        [4, 3, 62, 21025, 1238, 'mid-high'],
        [4, 3, 6, 21655, 1241, 'mid-high'],
        [4, 3, 194, 23988, 1212, 'mid-high'],
        [4, 3, 37, 22791, 1348, 'mid-high'],
        [4, 3, 166, 20694, 1369, 'mid-high'],
        [4, 3, 57, 20411, 1361, 'mid-high'],
        [4, 3, 113, 21588, 1356, 'mid-high'],
        [2, 1, 187, 5632, 331, 'low-mid'],
        [2, 1, 64, 6155, 322, 'low-mid'],
        [2, 1, 254, 6789, 357, 'low-mid'],
        [2, 1, 112, 5187, 318, 'low-mid'],
        [2, 1, 77, 5768, 391, 'low-mid'],
        [2, 1, 130, 7042, 362, 'low-mid'],
        [2, 1, 217, 5476, 372, 'low-mid'],
        [2, 1, 95, 6225, 392, 'low-mid'],
        [2, 1, 203, 6113, 374, 'low-mid'],
        [2, 1, 198, 6599, 336, 'low-mid'],
        [2, 1, 180, 7349, 327, 'low-mid'],
        [2, 1, 114, 5569, 318, 'low-mid'],
        [2, 1, 209, 6778, 398, 'low-mid'],
        [2, 1, 52, 5126, 365, 'low-mid'],
        [2, 1, 138, 5894, 321, 'low-mid'],
        [2, 1, 129, 6305, 372, 'low-mid'],
        [2, 1, 207, 6847, 396, 'low-mid'],
        [2, 1, 175, 6543, 372, 'low-mid'],
        [2, 1, 31, 5168, 348, 'low-mid'],
        [2, 1, 157, 5639, 355, 'low-mid'],
        [2, 1, 68, 6384, 384, 'low-mid'],
        [2, 1, 191, 6942, 326, 'low-mid'],
        [2, 1, 155, 5667, 376, 'low-mid'],
        [2, 1, 204, 7376, 396, 'low-mid'],
        [2, 1, 214, 6013, 393, 'low-mid'],
        [2, 1, 27, 5164, 373, 'low-mid'],
        [2, 1, 186, 6821, 347, 'low-mid'],
        [2, 1, 143, 5332, 315, 'low-mid'],
        [2, 1, 118, 5678, 353, 'low-mid'],
        [2, 1, 82, 6162, 369, 'low-mid'],
        [2, 1, 88, 6899, 357, 'low-mid'],
        [2, 1, 4, 5192, 363, 'low-mid'],
        [2, 1, 233, 7147, 376, 'low-mid'],
        [2, 1, 58, 5674, 345, 'low-mid'],
        [2, 1, 242, 6418, 335, 'low-mid'],
        [2, 1, 195, 7041, 377, 'low-mid'],
        [2, 1, 166, 5823, 328, 'low-mid'],
        [2, 1, 108, 5234, 365, 'low-mid'],
        [2, 1, 102, 6619, 315, 'low-mid'],
        [2, 1, 127, 7274, 399, 'low-mid'],
        [2, 1, 7, 5512, 351, 'low-mid'],
        [2, 1, 147, 6157, 324, 'low-mid'],
        [2, 1, 50, 6988, 394, 'low-mid'],
        [2, 1, 72, 5589, 369, 'low-mid'],
        [2, 1, 139, 5796, 393, 'low-mid'],
        [2, 1, 76, 6099, 319, 'low-mid'],
        [2, 1, 25, 6853, 344, 'low-mid'],
        [2, 1, 119, 5098, 354, 'low-mid'],
        [2, 1, 132, 5592, 335, 'low-mid'],
        [2, 1, 51, 6367, 353, 'low-mid'],
        [3, 2, 129, 7000, 343, 'low-mid'],
        [2, 1, 191, 6603, 321, 'low-mid'],
        [2, 1, 65, 7199, 354, 'low-mid'],
        [1, 1, 175, 3456, 198, 'low'],
        [1, 1, 24, 4217, 129, 'low'],
        [1, 1, 98, 4756, 113, 'low'],
        [1, 1, 54, 3982, 159, 'low'],
        [1, 1, 206, 4641, 237, 'low'],
        [2, 1, 134, 4779, 249, 'low'],
        [1, 1, 81, 3678, 157, 'low'],
        [1, 1, 71, 4982, 202, 'low'],
        [1, 1, 107, 3041, 216, 'low'],
        [1, 1, 113, 4345, 123, 'low'],
        [1, 1, 237, 3867, 109, 'low'],
        [2, 1, 154, 4216, 115, 'low'],
        [1, 1, 201, 4598, 121, 'low'],
        [1, 1, 162, 3799, 157, 'low'],
        [1, 1, 208, 3092, 105, 'low'],
        [1, 1, 229, 3920, 139, 'low'],
        [1, 1, 173, 4534, 179, 'low'],
        [1, 1, 55, 3210, 121, 'low'],
        [1, 1, 2, 4099, 103, 'low'],
        [2, 1, 32, 4667, 221, 'low'],
        [1, 1, 218, 3431, 166, 'low'],
        [1, 1, 119, 4150, 125, 'low'],
        [1, 1, 94, 4865, 203, 'low'],
        [2, 1, 9, 3555, 135, 'low'],
        [1, 1, 227, 4001, 156, 'low'],
        [1, 1, 249, 3300, 199, 'low'],
        [1, 1, 160, 4745, 156, 'low'],
        [1, 1, 34, 3212, 112, 'low'],
        [1, 1, 108, 4856, 122, 'low'],
        [1, 1, 95, 3681, 183, 'low'],
        [2, 1, 252, 4312, 229, 'low'],
        [1, 1, 33, 3055, 221, 'low'],
        [1, 1, 81, 4224, 127, 'low'],
        [1, 1, 109, 3741, 238, 'low'],
        [1, 1, 5, 4976, 168, 'low'],
        [1, 1, 60, 3390, 170, 'low'],
        [2, 1, 39, 4767, 189, 'low'],
        [1, 1, 158, 3434, 190, 'low'],
        [1, 1, 191, 4681, 160, 'low'],
        [1, 1, 84, 3053, 117, 'low'],
        [1, 1, 87, 4546, 231, 'low'],
        [1, 1, 68, 3999, 175, 'low'],
        [1, 1, 66, 4256, 162, 'low'],
        [2, 1, 38, 3091, 130, 'low'],
        [1, 1, 144, 4351, 176, 'low'],
        [1, 1, 195, 3709, 123, 'low'],
        [1, 1, 99, 4885, 112, 'low'],
        [1, 1, 138, 3308, 146, 'low'],
        [2, 1, 253, 4076, 121, 'low'],
        [1, 1, 25, 4621, 154, 'low'],
        [1, 1, 45, 3903, 189, 'low'],
        [1, 1, 113, 3094, 122, 'low']

    ];

    public function index(Request $request)
    {
        $number_of_rooms = 1 ;
        $number_of_bathrooms = 1;
        $square_feet = 170;
        $area_id = 8;

        $demo_price_ranges = $this->getDemoPriceRanges();

        $demo_data_for_LR = $this->getDemoDataForLinearRegression();
        $demo_samples_for_LR = $demo_data_for_LR['samples'];
        $demo_sample_prices_for_LR = $demo_data_for_LR['prices'];
        $demo_data_for_KNN = $this->getDemoDataForKnn();
        $demo_samples_for_KNN = $demo_data_for_KNN['samples'];
        $demo_sample_labels_for_KNN = $demo_data_for_KNN['labels'];

        $regression = new LeastSquares();
        $regression->train($demo_samples_for_LR, $demo_sample_prices_for_LR);

        $predicted_price = abs(intval(round($regression->predict([
            $number_of_rooms,
            $number_of_bathrooms,
            $square_feet,
            $area_id]))));

            //return $predicted_price;

        $classifier = new KNearestNeighbors();
        $classifier->train($demo_samples_for_KNN, $demo_sample_labels_for_KNN);

        $predicted_knn_classifiers = $classifier->predict([
            $number_of_rooms,
            $number_of_bathrooms,
            $square_feet,
            $area_id,
            $predicted_price]);

        $predicted_classifier_price_ranges = $this->getPredictedClassifierPriceRanges($predicted_knn_classifiers, $demo_price_ranges);

        $closest_range = $this->getClosestPriceRangeFromPredictedClassifiers($predicted_classifier_price_ranges, $predicted_price);

        $final_price_range = $this->calculateFinalPriceRange($closest_range, $predicted_price);

        return ['predicted price '=>$predicted_price,'predicted range' => [$final_price_range['from'], $final_price_range['to']]];
    }

    public function performTestRequest(Request $request){
        $data = [];
        $test = $this->testCases();

        foreach($test as $case){
            $number_of_rooms = $case['rooms'];
            $number_of_bathrooms = $case['bathrooms'];
            $square_feet = $case['square_feet'];
            $area_id = $case['area_id'];

            $demo_price_ranges = $this->getDemoPriceRanges();

            $demo_data_for_LR = $this->getDemoDataForLinearRegression();
            $demo_samples_for_LR = $demo_data_for_LR['samples'];
            $demo_sample_prices_for_LR = $demo_data_for_LR['prices'];
            $demo_data_for_KNN = $this->getDemoDataForKnn();
            $demo_samples_for_KNN = $demo_data_for_KNN['samples'];
             $demo_sample_labels_for_KNN = $demo_data_for_KNN['labels'];

            $regression = new LeastSquares();
            $regression->train($demo_samples_for_LR, $demo_sample_prices_for_LR);

            $predicted_price = abs(intval(round($regression->predict([
                $number_of_rooms,
                $number_of_bathrooms,
                $square_feet,
                $area_id]))));

                //return $predicted_price;

            $classifier = new KNearestNeighbors();
            $classifier->train($demo_samples_for_KNN, $demo_sample_labels_for_KNN);

            $predicted_knn_classifiers = $classifier->predict([
                $number_of_rooms,
                $number_of_bathrooms,
                $square_feet,
                $area_id,
                $predicted_price]);

            $predicted_classifier_price_ranges = $this->getPredictedClassifierPriceRanges($predicted_knn_classifiers, $demo_price_ranges);

            $closest_range = $this->getClosestPriceRangeFromPredictedClassifiers($predicted_classifier_price_ranges, $predicted_price);

            $final_price_range = $this->calculateFinalPriceRange($closest_range, $predicted_price);

            $data[] = ['predicted price '=>$predicted_price,'predicted range' => [$final_price_range['from'], $final_price_range['to']]];
        }

        return response()->json($data, 200);
    }

    public function getTestCases(Request $request){
        return response()->json($this->testCases(), 200);
    }

    private function getDemoPriceRanges(){
        $rentClassificationRanges = RentClassification::all();
        $arr = [];

        foreach($rentClassificationRanges as $range){
            $arr[ $range->slug]=['from'=> $range->from, 'to'=>$range->to];
        }

        return $arr;
    }

    private function getDemoDataForLinearRegression(){
        //First value is number of rooms
        //2nd value if number of bathrooms
        //last is area id

        $samples = [];
        //These are all corresponding prices
        $prices = [];

        foreach(array_chunk($this->demoDataArr, 50) as $key=>$val){
            foreach($val as $v){
            $s = [$v[0], $v[1], $v[4], $v[2]];
            $p = $v[3];
            array_push($samples, $s);
            array_push($prices, $p);
            }
        }

       return [
        'samples' => $samples,
        'prices' => $prices
       ];
    }

    private function getDemoDataForKnn(){
        //First value is number of rooms
        //2nd value if number of bathrooms
        //third is area id
        //Last is price

        $samples = [];

        $labels = [];

        foreach(array_chunk($this->demoDataArr, 50) as $key=>$val){
            foreach($val as $v){
            $s = [$v[0], $v[1], $v[4], $v[2], $v[3]];
            $l = $v[5];
            array_push($samples, $s);
            array_push($labels, $l);
            }
        }

       return [
        'samples' => $samples,
        'labels' => $labels
       ];
    }

    private function getPredictedClassifierPriceRanges($predicted_knn_classifiers, $demo_price_ranges){
        $predicted_classifier_price_ranges = [];
        foreach(array_keys($predicted_knn_classifiers) as $key){
            if(array_key_exists($key, $demo_price_ranges)){
                $predicted_classifier_price_ranges[$key] =  [
                        'from' => $demo_price_ranges[$key]['from'],
                        'to' => $demo_price_ranges[$key]['to']
                    ];
            }
        }
        return $predicted_classifier_price_ranges;
    }

    private function getClosestPriceRangeFromPredictedClassifiers(
    $predicted_classifier_price_ranges,
    $predicted_price)
    {
        $min_distance = PHP_INT_MAX;
        $closest = null;

        foreach($predicted_classifier_price_ranges as $key=>$range){
            $distance = 0;
            if($predicted_price < $range['from']){
                $distance = $range['from'] - $predicted_price;
            }
            else if($predicted_price > $range['to']){
                $distance = $predicted_price - $range['to'];
            }
            if($distance < $min_distance){
                $min_distance = $distance;
                $closest = $range;
            }
        }
        return $closest;
    }

    private function calculateFinalPriceRange($closest, $predicted_price){
        $from = $closest['from'];
        $to   = $closest['to'];

        if(!($predicted_price >= $from && $predicted_price <= $to)){
            $range_diff = $to - $from;
            $from_diff = (($from - $predicted_price + 1) >= $range_diff) ? true : false;
            $to_diff = (($predicted_price - $to + 1) >= $range_diff) ? true : false;

            if($predicted_price < $from && $from_diff){
                $to = $from;
                $from = $predicted_price;
            }
            else if($predicted_price > $to && $to_diff){
                $from = $to;
                $to = $predicted_price;
            }
            else if($predicted_price < $from){
                $from = $from - ($from-$predicted_price);
            }
            else if($predicted_price > $from){
                $to = $to + ($predicted_price - $to);
            }
        }

        return [
            'from' => $from,
            'to' => $to
        ];
    }

    private function testCases(){
        return [
            [
            'rooms' => 1,
            'bathrooms' => 1,
            'square_feet' => 170,
            'area_id' => 8,
            ],
            [
                'rooms' => 2,
                'bathrooms' => 1,
                'square_feet' => 250,
                'area_id' => 8,
            ],
            [
                'rooms' => 2,
                'bathrooms' => 1,
                'square_feet' => 270,
                'area_id' => 10,
            ],
            [
                'rooms' => 3,
                'bathrooms' => 1,
                'square_feet' => 400,
                'area_id' => 8,
            ],
            [
                'rooms' => 3,
                'bathrooms' => 2,
                'square_feet' => 570,
                'area_id' => 8,
            ],
            [
                'rooms' => 4,
                'bathrooms' => 2,
                'square_feet' => 600,
                'area_id' => 10,
            ],
            [
                'rooms' => 5,
                'bathrooms' => 2,
                'square_feet' => 700,
                'area_id' => 8,
            ],
            [
                'rooms' => 10,
                'bathrooms' => 3,
                'square_feet' => 5500,
                'area_id' => 10,
            ],
            [
                'rooms' => 6,
                'bathrooms' => 3,
                'square_feet' => 3000,
                'area_id' => 8,
            ],
            [
                'rooms' => 12,
                'bathrooms' => 4,
                'square_feet' => 6500,
                'area_id' => 8,
            ],
        ];
    }

    public function trainAndSave(){

        $demo_data_for_LR = $this->getDemoDataForLinearRegression();
        $demo_samples_for_LR = $demo_data_for_LR['samples'];
        $demo_sample_prices_for_LR = $demo_data_for_LR['prices'];
        $demo_data_for_KNN = $this->getDemoDataForKnn();
        $demo_samples_for_KNN = $demo_data_for_KNN['samples'];
        $demo_sample_labels_for_KNN = $demo_data_for_KNN['labels'];
        $modelManager = new ModelManager();

        $regression = new LeastSquares();
        $regression->train($demo_samples_for_LR, $demo_sample_prices_for_LR);

        $lr_filepath = 'ml_model/linear_regression';
        $modelManager->saveToFile($regression, $lr_filepath);

        $classifier = new KNearestNeighbors();
        $classifier->train($demo_samples_for_KNN, $demo_sample_labels_for_KNN);
        $knn_filepath = 'ml_model/k_nearest_neighbour';
        $modelManager->saveToFile($classifier,  $knn_filepath);
    }


}
